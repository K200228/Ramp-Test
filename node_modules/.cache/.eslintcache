[{"C:\\Users\\iaanu\\Desktop\\ramp-fe-challenge\\ramp-fe-challenge\\src\\index.tsx":"1","C:\\Users\\iaanu\\Desktop\\ramp-fe-challenge\\ramp-fe-challenge\\src\\App.tsx":"2","C:\\Users\\iaanu\\Desktop\\ramp-fe-challenge\\ramp-fe-challenge\\src\\components\\AppContextProvider\\index.tsx":"3","C:\\Users\\iaanu\\Desktop\\ramp-fe-challenge\\ramp-fe-challenge\\src\\utils\\constants.ts":"4","C:\\Users\\iaanu\\Desktop\\ramp-fe-challenge\\ramp-fe-challenge\\src\\hooks\\useEmployees.ts":"5","C:\\Users\\iaanu\\Desktop\\ramp-fe-challenge\\ramp-fe-challenge\\src\\components\\Instructions.tsx":"6","C:\\Users\\iaanu\\Desktop\\ramp-fe-challenge\\ramp-fe-challenge\\src\\hooks\\usePaginatedTransactions.ts":"7","C:\\Users\\iaanu\\Desktop\\ramp-fe-challenge\\ramp-fe-challenge\\src\\hooks\\useTransactionsByEmployee.ts":"8","C:\\Users\\iaanu\\Desktop\\ramp-fe-challenge\\ramp-fe-challenge\\src\\components\\InputSelect\\index.tsx":"9","C:\\Users\\iaanu\\Desktop\\ramp-fe-challenge\\ramp-fe-challenge\\src\\components\\Transactions\\index.tsx":"10","C:\\Users\\iaanu\\Desktop\\ramp-fe-challenge\\ramp-fe-challenge\\src\\utils\\context.ts":"11","C:\\Users\\iaanu\\Desktop\\ramp-fe-challenge\\ramp-fe-challenge\\src\\hooks\\useCustomFetch.ts":"12","C:\\Users\\iaanu\\Desktop\\ramp-fe-challenge\\ramp-fe-challenge\\src\\components\\Transactions\\TransactionPane.tsx":"13","C:\\Users\\iaanu\\Desktop\\ramp-fe-challenge\\ramp-fe-challenge\\src\\utils\\fetch.ts":"14","C:\\Users\\iaanu\\Desktop\\ramp-fe-challenge\\ramp-fe-challenge\\src\\hooks\\useWrappedRequest.ts":"15","C:\\Users\\iaanu\\Desktop\\ramp-fe-challenge\\ramp-fe-challenge\\src\\utils\\requests.ts":"16","C:\\Users\\iaanu\\Desktop\\ramp-fe-challenge\\ramp-fe-challenge\\src\\components\\InputCheckbox\\index.tsx":"17"},{"size":314,"mtime":1726539091000,"results":"18","hashOfConfig":"19"},{"size":3460,"mtime":1745191759588,"results":"20","hashOfConfig":"19"},{"size":675,"mtime":1726539091000,"results":"21","hashOfConfig":"19"},{"size":135,"mtime":1726539091000,"results":"22","hashOfConfig":"19"},{"size":672,"mtime":1726539091000,"results":"23","hashOfConfig":"19"},{"size":593,"mtime":1726539091000,"results":"24","hashOfConfig":"19"},{"size":1675,"mtime":1745190512677,"results":"25","hashOfConfig":"19"},{"size":1173,"mtime":1745191403694,"results":"26","hashOfConfig":"19"},{"size":3729,"mtime":1745169160862,"results":"27","hashOfConfig":"19"},{"size":1382,"mtime":1745192031518,"results":"28","hashOfConfig":"19"},{"size":238,"mtime":1726539091000,"results":"29","hashOfConfig":"19"},{"size":2201,"mtime":1726539091000,"results":"30","hashOfConfig":"19"},{"size":1181,"mtime":1745189768058,"results":"31","hashOfConfig":"19"},{"size":3115,"mtime":1726539091000,"results":"32","hashOfConfig":"19"},{"size":666,"mtime":1726539091000,"results":"33","hashOfConfig":"19"},{"size":1557,"mtime":1726539091000,"results":"34","hashOfConfig":"19"},{"size":875,"mtime":1745170887702,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},"263dej",{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43"},{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"53","messages":"54","suppressedMessages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","suppressedMessages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"65","messages":"66","suppressedMessages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","suppressedMessages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"71","messages":"72","suppressedMessages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"74","messages":"75","suppressedMessages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"77","messages":"78","suppressedMessages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"80","messages":"81","suppressedMessages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"83","messages":"84","suppressedMessages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"86","messages":"87","suppressedMessages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},"C:\\Users\\iaanu\\Desktop\\ramp-fe-challenge\\ramp-fe-challenge\\src\\index.tsx",[],[],[],"C:\\Users\\iaanu\\Desktop\\ramp-fe-challenge\\ramp-fe-challenge\\src\\App.tsx",["89"],[],"import { Fragment, useCallback, useEffect, useMemo, useState } from \"react\"\nimport { InputSelect } from \"./components/InputSelect\"\nimport { Instructions } from \"./components/Instructions\"\nimport { Transactions } from \"./components/Transactions\"\nimport { useEmployees } from \"./hooks/useEmployees\"\nimport { usePaginatedTransactions } from \"./hooks/usePaginatedTransactions\"\nimport { useTransactionsByEmployee } from \"./hooks/useTransactionsByEmployee\"\nimport { EMPTY_EMPLOYEE } from \"./utils/constants\"\nimport { Employee } from \"./utils/types\"\n\nexport function App() {\n  const { data: employees, ...employeeUtils } = useEmployees()\n  const { data: paginatedTransactions, ...paginatedTransactionsUtils } = usePaginatedTransactions()\n  const { data: transactionsByEmployee, ...transactionsByEmployeeUtils } = useTransactionsByEmployee()\n\n  const transactions = useMemo(\n    () => paginatedTransactions?.data ?? transactionsByEmployee ?? null,\n    [paginatedTransactions, transactionsByEmployee]\n  )\n\n  const loadAllTransactions = useCallback(async () => {\n    transactionsByEmployeeUtils.invalidateData()\n\n    await employeeUtils.fetchAll()\n    await paginatedTransactionsUtils.fetchAll()\n\n  }, [employeeUtils, paginatedTransactionsUtils, transactionsByEmployeeUtils])\n\n  const loadTransactionsByEmployee = useCallback(\n    async (employeeId: string) => {\n      paginatedTransactionsUtils.invalidateData()\n      await transactionsByEmployeeUtils.fetchById(employeeId)\n    },\n    [paginatedTransactionsUtils, transactionsByEmployeeUtils]\n  )\n\n  useEffect(() => {\n    if (employees === null && !employeeUtils.loading) {\n      loadAllTransactions()\n    }\n  }, [employeeUtils.loading, employees, loadAllTransactions])\n\n  return (\n    <Fragment>\n      <main className=\"MainContainer\">\n        <Instructions />\n\n        <hr className=\"RampBreak--l\" />\n\n        <InputSelect<Employee>\n          isLoading={employeeUtils.loading || employees === null}\n          defaultValue={EMPTY_EMPLOYEE}\n          items={employees === null ? [] : [EMPTY_EMPLOYEE, ...employees]}\n          label=\"Filter by employee\"\n          loadingLabel=\"Loading employees\"\n          parseItem={(item) => ({\n            value: item.id,\n            label: `${item.firstName} ${item.lastName}`,\n          })}\n          onChange={async (newValue) => {\n            if (newValue === null) {\n              return\n            }\n            if (newValue.id === EMPTY_EMPLOYEE.id) {\n              await loadAllTransactions()\n            } else {\n              await loadTransactionsByEmployee(newValue.id)\n            }\n          }}\n        />\n\n        <div className=\"RampBreak--l\" />\n\n        <div className=\"RampGrid\">\n          <Transactions\n            transactions={transactions}\n            updateTransaction={(transactionId, updatedFields) => {\n              paginatedTransactionsUtils.updateTransaction(transactionId, updatedFields)\n              transactionsByEmployeeUtils.updateTransaction(transactionId, updatedFields)\n            }}\n          />\n\n          {paginatedTransactions !== null && paginatedTransactions.nextPage !== null && (\n            <button\n              className=\"RampButton\"\n              disabled={paginatedTransactionsUtils.loading}\n              onClick={async () => {\n                await paginatedTransactionsUtils.fetchAll()\n              }}\n            >\n              View More\n            </button>\n          )}\n\n        </div>\n      </main>\n    </Fragment>\n  )\n}\n","C:\\Users\\iaanu\\Desktop\\ramp-fe-challenge\\ramp-fe-challenge\\src\\components\\AppContextProvider\\index.tsx",[],[],"C:\\Users\\iaanu\\Desktop\\ramp-fe-challenge\\ramp-fe-challenge\\src\\utils\\constants.ts",[],[],"C:\\Users\\iaanu\\Desktop\\ramp-fe-challenge\\ramp-fe-challenge\\src\\hooks\\useEmployees.ts",[],[],"C:\\Users\\iaanu\\Desktop\\ramp-fe-challenge\\ramp-fe-challenge\\src\\components\\Instructions.tsx",[],[],"C:\\Users\\iaanu\\Desktop\\ramp-fe-challenge\\ramp-fe-challenge\\src\\hooks\\usePaginatedTransactions.ts",[],[],"C:\\Users\\iaanu\\Desktop\\ramp-fe-challenge\\ramp-fe-challenge\\src\\hooks\\useTransactionsByEmployee.ts",[],[],"C:\\Users\\iaanu\\Desktop\\ramp-fe-challenge\\ramp-fe-challenge\\src\\components\\InputSelect\\index.tsx",[],[],"C:\\Users\\iaanu\\Desktop\\ramp-fe-challenge\\ramp-fe-challenge\\src\\components\\Transactions\\index.tsx",[],[],"C:\\Users\\iaanu\\Desktop\\ramp-fe-challenge\\ramp-fe-challenge\\src\\utils\\context.ts",[],[],"C:\\Users\\iaanu\\Desktop\\ramp-fe-challenge\\ramp-fe-challenge\\src\\hooks\\useCustomFetch.ts",[],[],"C:\\Users\\iaanu\\Desktop\\ramp-fe-challenge\\ramp-fe-challenge\\src\\components\\Transactions\\TransactionPane.tsx",["90"],[],"C:\\Users\\iaanu\\Desktop\\ramp-fe-challenge\\ramp-fe-challenge\\src\\utils\\fetch.ts",[],[],"C:\\Users\\iaanu\\Desktop\\ramp-fe-challenge\\ramp-fe-challenge\\src\\hooks\\useWrappedRequest.ts",[],[],"C:\\Users\\iaanu\\Desktop\\ramp-fe-challenge\\ramp-fe-challenge\\src\\utils\\requests.ts",[],[],"C:\\Users\\iaanu\\Desktop\\ramp-fe-challenge\\ramp-fe-challenge\\src\\components\\InputCheckbox\\index.tsx",[],[],{"ruleId":"91","severity":1,"message":"92","line":1,"column":53,"nodeType":"93","messageId":"94","endLine":1,"endColumn":61},{"ruleId":"91","severity":1,"message":"95","line":1,"column":10,"nodeType":"93","messageId":"94","endLine":1,"endColumn":19},"@typescript-eslint/no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used."]